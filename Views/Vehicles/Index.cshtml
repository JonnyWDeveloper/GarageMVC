@model IEnumerable<GarageMVC.Models.ViewModels.VehicleOverview>


@{
    ViewData["Title"] = "Index";

}


<h1>Overview</h1>
<p>[Index.cshtml]</p>
<p>
    <a asp-action="Create" class="btn btn-primary">Park a new vehichle</a>

    <div id="parked" hidden="hidden" class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Your @ViewData["VehicleType"] with registration number: @ViewData["RegNo"] has parked!</strong>&nbsp;
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
        </button>
    </div>
    <div id="checkedout" hidden="hidden" class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Your @ViewData["VehicleType"] with registration number: @ViewData["RegNo"] has checked out!</strong>&nbsp;
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
        </button>
    </div>
    <div id="updated" hidden="hidden" class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Your @ViewData["VehicleType"] with registration number: @ViewData["RegNo"] has been updated!</strong>&nbsp;
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
        </button>
    </div>
    @if (ViewData["ShowElement"] != null)
    {
        <script>
            let parked = document.querySelector("#parked");
            let checkedout = document.querySelector("#checkedout");
            let updated = document.querySelector("#updated");

            let element = @ViewData["ShowElement"];

            if (element == parked || element == checkedout || element == updated) {
                element.removeAttribute("hidden");
            }
        </script>
    }
    @* else
    {
    <script type="text/javascript">
    let element = document.querySelector("#checkedout");
    element.removeAttribute("hidden");
    element.innerText ="An error ocurred!";
    </script>
    }*@

    @* <div class="alert alert-success" role="alert">
    <h4 class="alert-heading">Well done!</h4>
    <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>
    <hr>
    <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>
    </div>*@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VehicleType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeOfArrival)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeOfArrival)
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-primary" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" class="btn btn-primary" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" class="btn btn-primary" asp-route-id="@item.Id">Checkout</a>
                </td>
            </tr>
        }
    </tbody>
</table>
